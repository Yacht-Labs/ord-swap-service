openapi: 3.0.0
info:
  title: Yacht Ordinal Server
  description: An example TypeScript server using Express and Prisma
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /listings:
    post:
      summary: Create a new listing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ethAddress
                - ethPrice
                - inscriptionId
                - inscriptionNumber
              properties:
                ethAddress:
                  type: string
                  pattern: "^0x[a-fA-F0-9]{40}$"
                ethPrice:
                  type: string
                inscriptionId:
                  type: string
                inscriptionNumber:
                  type: string
      responses:
        201:
          description: Listing created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"
    put:
      summary: Update a listing by ID (cancel or mark as sold)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - listingId
                - isBuy
              properties:
                listingId:
                  type: string
                signature:
                  type: string
                isBuy:
                  type: boolean
                pkpPublicKey:
                  type: string
                encryptionPubKey:
                  type: string
      responses:
        200:
          description: Listing updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"
    get:
      summary: Get listings with optional query parameters
      parameters:
        - name: address
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: Listings retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Listing"
  /listing/confirm:
    put:
      summary: Confirm a listing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listingId:
                  type: string
      responses:
        "200":
          description: Listing confirmed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error

  /listing/withdraw:
    post:
      summary: Withdraw an Ordinal to a Bitcoin Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listingId:
                  type: string
                authSig:
                  type: object
                btcWithdrawalAddress:
                  type: string
      responses:
        "200":
          description: Listing withdrawn successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error

  /accounts:
    post:
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ethAddress:
                  type: string
                  pattern: "^0x[a-fA-F0-9]{40}$"
              required:
                - ethAddress
      responses:
        "201":
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "500":
          description: Error occurred while creating the account
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ethAddress:
                  type: string
                  pattern: "^0x[a-fA-F0-9]{40}$"
                btcPayoutAddress:
                  type: string
              required:
                - ethAddress
                - btcPayoutAddress
      responses:
        "200":
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Account not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Error occurred while updating the account
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        ethAddress:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        btcPayoutAddress:
          type: string
    Listing:
      type: object
      properties:
        id:
          type: string
        inscriptionId:
          type: string
        inscriptionNumber:
          type: string
        listingAccountId:
          type: string
        ethPrice:
          type: string
        pkpPublicKey:
          type: string
        taprootAddress:
          type: string
        createdAt:
          type: string
          format: date-time
        sellDate:
          type: string
          format: date-time
        cancelledDate:
          type: string
          format: date-time
        confirmedDate:
          type: string
          format: date-time
