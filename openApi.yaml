openapi: 3.0.0
info:
  title: TypeScript Server
  description: An example TypeScript server using Express and Prisma
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /listings/{listingId}:
    put:
      summary: Update a listing by ID (cancel or mark as sold)
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  type: string
      responses:
        200:
          description: Listing updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"
  /listings:
    post:
      summary: Create a new listing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ethAddress
                - ethPrice
                - inscriptionId
              properties:
                ethAddress:
                  type: string
                  pattern: "^0x[a-fA-F0-9]{40}$"
                ethPrice:
                  type: string
                inscriptionId:
                  type: string
      responses:
        201:
          description: Listing created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"
    get:
      summary: Get listings with optional query parameters
      parameters:
        - name: address
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: Listings retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Listing"
  /accounts:
    post:
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ethAddress:
                  type: string
                  pattern: "^0x[a-fA-F0-9]{40}$"
              required:
                - ethAddress
      responses:
        "201":
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "500":
          description: Error occurred while creating the account
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /createListing:
    post:
      summary: Create a new listing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ethAddress
                - ethPrice
                - inscriptionId
              properties:
                ethAddress:
                  type: string
                ethPrice:
                  type: string
                inscriptionId:
                  type: string
      responses:
        201:
          description: Listing created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"

  /getListing/{listingId}:
    get:
      summary: Get a listing by ID
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Listing retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"

  /cancelListing/{listingId}:
    post:
      summary: Cancel a listing by ID
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - signature
              properties:
                signature:
                  type: string
      responses:
        200:
          description: Listing cancelled successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"

  /getListings:
    get:
      summary: Get listings with optional query parameter
      parameters:
        - name: address
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: Listings retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Listing"

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        ethAddress:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
    Listing:
      type: object
      properties:
        id:
          type: string
        inscriptionId:
          type: string
        inscriptionNumber:
          type: string
        listingAccountId:
          type: string
        ethPrice:
          type: string
        pkpPublicKey:
          type: string
        taprootAddress:
          type: string
        createdAt:
          type: string
          format: date-time
        sellDate:
          type: string
          format: date-time
        cancelledDate:
          type: string
          format: date-time
